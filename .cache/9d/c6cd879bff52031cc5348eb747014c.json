{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/Applications/MAMP/htdocs/recipeApi/index.html","resolved":"/Applications/MAMP/htdocs/recipeApi/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Applications/MAMP/htdocs/recipeApi/package.json","includedInParent":true,"mtime":1588547550382}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>API Recipe Test - connecting to recipe puppy</title>\n    <style>.recipes{\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n            grid-gap: 20px;\n        }\n\n        .recipe{\n            border: 1px solid grey;\n            padding: 20px;\n            border-radius: 5px;\n        }</style>\n</head>\n<body>\n    <div class=\"wrapper\">\n        <form class=\"search\" autocomplete=\"off\">\n            <input type=\"text\" name=\"query\">\n            <button name=\"submit\" type=\"submit\">Submit</button>\n        </form>\n        <div class=\"recipes\">\n\n        </div>\n    </div>\n    <script>//have a parcel package for this to fix CORS\n// regenerator run time - babel - takes your js and back compatibility it. Transpiles your code.\n// we need to tell babel to tnot transpile assync await\n// we are using a proxy to step over CORS as well. Makes a server side request. Proxy will send us data. CORS PROXY. \n// https://cors-anywhere.herokuapp.com/\n// never use above for anything with passwords\nconst baseEndpoint = 'http://www.recipepuppy.com/api';\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\nconst form = document.querySelector('form.search');\nconst recipesGrid = document.querySelector('.recipes');\nconsole.log('working'); // query params always start with a question mark\n// additional params have an ampersand between them. \n// api's aren't standardized\n\nasync function fetchRecipes(query) {\n  const response = await fetch(`${proxy}${baseEndpoint}?q=${query}`);\n  const data = await response.json(); // console.log(data);\n\n  return data;\n}\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  const el = event.currentTarget; // console.log(form.query.value);\n  // diable to=he search\n\n  el.submit.disabled = true; // pass what the input value is to the function\n\n  const recipes = await fetchRecipes(el.query.value);\n  console.log(recipes);\n  el.submit.disabled = false;\n  displayRecipes(recipes.results);\n} // takes in an array of recipes\n\n\nfunction displayRecipes(recipes) {\n  console.log('creating HTML'); // console.log(recipes);\n\n  const html = recipes.map(recipe => {\n    return `<div class=\"recipe\">\n            <h2>${recipe.title}</h2>\n            <p>${recipe.ingredients}</p>\n            <a href=\"${recipe.href}\">View recipe</p>\n            ${recipe.thumbnail && `<img src=\"${recipe.thumbnail}\" alt=\"${recipe.title}\"}/>`}\n            </div>`;\n  });\n  recipesGrid.innerHTML = html.join(' ');\n}\n\nform.addEventListener('submit', handleSubmit);\nfetchRecipes();</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"61efef75681ec78c894210aeab3dd18e","cacheData":{"env":{}}}