{"id":"index.html","dependencies":[{"name":"/Applications/MAMP/htdocs/recipeApi/package.json","includedInParent":true,"mtime":1588547550382}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>API Recipe Test - connecting to recipe puppy</title>\n</head>\n<body>\n    <div class=\"wrapper\">\n        <form class=\"search\" autocomplete=\"off\">\n            <input type=\"text\" name=\"query\" value=\"pizza\">\n            <button disabled=\"\" type=\"submit\">Submit</button>\n        </form>\n    </div>\n    <script>//have a parcel package for this to fix CORS\n// regenerator run time - babel - takes your js and back compatibility it. Transpiles your code.\n// we need to tell babel to tnot transpile assync await\n// we are using a proxy to step over CORS as well. Makes a server side request. Proxy will send us data. CORS PROXY. \n// https://cors-anywhere.herokuapp.com/\n// never use above for anything with passwords\nconst baseEndpoint = 'http://www.recipepuppy.com/api';\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\nconst form = document.querySelector('form.search');\nconsole.log('working'); // query params always start with a question mark\n// additional params have an ampersand between them. \n// api's aren't standardized\n\nasync function fetchRecipes(query) {\n  const response = await fetch(`${proxy}${baseEndpoint}?q=${query}`);\n  const data = await response.json();\n  console.log(data);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  console.log(event.currentTarget.query.value);\n}\n\nform.addEventListener('submit', handleSubmit);\nfetchRecipes('pizza');</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"a57571f8bdabf8550d45807398f6edb8","cacheData":{"env":{}}}